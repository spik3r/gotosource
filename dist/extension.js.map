{"version":3,"file":"extension.js","mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,uGCrBf,eACA,SAEA,oBAAyBQ,GAExB,MAAMC,EAAWC,EAAOC,SAASC,gBAAgB,uBAAuBC,UACvE,MAAMC,EAASJ,EAAOK,OAAOC,iBAC7B,IAAIC,EAAiBH,GAAQI,UAAUC,MACnCC,EAAYH,EAAiBH,GAAQO,SAASC,uBAAuBL,QAAkBX,EACvFiB,EAAcT,GAAQO,SAASG,QAAQJ,SAEpC,EAAAT,SAASc,eAAe,mCAAoC,CAClE,MAAS,SAASF,KAClB,UAAY,EACZ,eAAiB,EACjB,cAAgB,EAChB,eAAkB,SAClB,eAAkB,OAClB,kCAAoC,OAIhCG,EAAahB,EAAOC,SAASC,gBAAgB,yBAAyBC,UAC3E,MAAMC,EAASJ,EAAOK,OAAOC,iBAC7B,IAAIC,EAAiBH,GAAQI,UAAUC,MACnCC,EAAYH,EAAiBH,GAAQO,SAASC,uBAAuBL,QAAkBX,EACvFiB,EAAcT,GAAQO,SAASG,QAAQJ,SAErC,EAAAT,SAASc,eAAe,+BAAiC,CAC9D,MAASF,EACT,eAAkB,SAClB,eAAkB,OAClB,kCAAoC,OAKtCf,EAAQmB,cAAcC,KAAKnB,GAC3BD,EAAQmB,cAAcC,KAAKF,IAG5B,2B","sources":["webpack://gotosource/external commonjs \"vscode\"","webpack://gotosource/webpack/bootstrap","webpack://gotosource/./src/extension.ts"],"sourcesContent":["module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from 'vscode';\nimport { commands } from 'vscode';\n\nexport function activate(context: vscode.ExtensionContext) {\n\n\tconst goToFile = vscode.commands.registerCommand('gotosource.goToFile', async () => {\n\t\tconst editor = vscode.window.activeTextEditor;\n\t\tlet cursorPosition = editor?.selection.start;\n\t\tlet wordRange = cursorPosition ? editor?.document.getWordRangeAtPosition(cursorPosition) : undefined;\n\t\tlet highlighted = editor?.document.getText(wordRange);\n\n\t\t await commands.executeCommand('editor.action.goToTypeDefinition', {\n\t\t\t\"query\": `[\\\\s](${highlighted})`,   \n\t\t\t\"isRegexp\": true,   \n\t\t\t\"triggerSearch\": true,          \n\t\t\t\"focusResults\": true,\n\t\t\t\"filesToExclude\": '*.d.ts',\n\t\t\t\"filesToInclude\": '*.ts',\n\t\t\t\"useExcludeSettingsAndIgnoreFiles\": true,           \n\t\t  });\n\t});\n\n\tconst searchFile = vscode.commands.registerCommand('gotosource.searchFile', async () => {\n\t\tconst editor = vscode.window.activeTextEditor;\n\t\tlet cursorPosition = editor?.selection.start;\n\t\tlet wordRange = cursorPosition ? editor?.document.getWordRangeAtPosition(cursorPosition) : undefined;\n\t\tlet highlighted = editor?.document.getText(wordRange);\n\n\t\tawait commands.executeCommand('workbench.action.findInFiles',  {\n\t\t\t\"query\": highlighted,   \n\t\t\t\"filesToExclude\": '*.d.ts',\n\t\t\t\"filesToInclude\": '*.ts',\n\t\t\t\"useExcludeSettingsAndIgnoreFiles\": true,           \n\t\t  });\n\t});\n\n\n\tcontext.subscriptions.push(goToFile);\n\tcontext.subscriptions.push(searchFile);\n}\n\nexport function deactivate() {}\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","goToFile","vscode","commands","registerCommand","async","editor","window","activeTextEditor","cursorPosition","selection","start","wordRange","document","getWordRangeAtPosition","highlighted","getText","executeCommand","searchFile","subscriptions","push"],"sourceRoot":""}